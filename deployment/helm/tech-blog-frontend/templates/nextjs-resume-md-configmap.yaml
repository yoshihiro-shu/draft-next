apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "tech-blog-frontend.fullname" . }}-nextjs-resume-md
  labels:
    {{- include "tech-blog-frontend.labels" . | nindent 4 }}
data:
    resume.md: |
      # 職務経歴書

      ## 基本情報

      |key|value|
      |---|-----|
      |Name|朱　義宏 (Yoshihiro Shu)|
      |Github|[yoshihiro-shu](https://github.com/yoshihiro-shu)|

      ## 職務経歴要約

      大学卒業後、株式会社 ZUU に入社し、一貫してシステムエンジニアとして従事しております。金融メ
      ディアの運用、保守、開発の業務を担当しており、要件定義から運用、保守まで経験しております。ま
      た、現在ではマネジメント業務もお任せいただいております。

      ## 得意分野・活かせる知識

      - マネジメント業務の経験
      - 要件定義から運用、保守までの各業務経験
      - フロントエンド、バックエンド両方の開発経験
      - Go、Python、JavaScript、TypeScript を使用した開発経験
      - Google Cloud の知識
      - Docker、Kubernetes を使用した運用、保守経験

      ## 自己 PR

      これまで、システムエンジニアとしてのスキルを身に付けてまいりました。
      また、現在プライベートでも、Cloud Native Days 委員会へ参加し、実際のイベントに向けての運営を進める中で、監視ツールの資料作成や、チームメンバーから他社の状況などについて学んでおります。
      これらの経験を新しい環境でも活かしていきたいと考えております。

      ## マネジメント能力

      ### マネジメントしたこと

      スクラムを導入し、チームワークの促進と工数やプロジェクトを円滑に進めるためのタスク管理の改善を行いました。

      ### 背景

      今年の4月から異動になった新チームでは、退職率が高くメンバーの平均在籍年数が一年と満たないことに課題感を強く感じていました。

      原因として、新チームでは過度な残業時間が日常化していることで心理的安全性の低さにありました。

      ボトルネックとして、工数見積もりの精度の低さ、実績工数の管理の甘さ、タスク漏れから精度の高い工数の見積もりやプロジェクトのプロセスを進められないことにありました。

      チームワークの促進、心理的安全性の改善、工数やタスクの見える化を行う必要がありました。

      ### 具体的に行ったこと

      チームメンバーのアジャイルの理解の促進、チームワークの促進と心理的安全性の向上を行いました。

      - チーム内でアジャイル勉強会を開催することでアジャイル開発の理解の促進
      - チームビルディングを行うことで、チームワークの促進
        - インセプションデッキ、スキルマップ、ドラッガー風エクササイズなどの実施
      - 週に一度のふりかえりを行うことで心理的安全性の向上

      最後に工数やタスクの管理を徹底するためにルール化を行ました。

      - タスクや工数管理をバックログでの管理の徹底

      ## 職務経歴

      ### 株式会社ZUU(インターン:2022/02-2022/04, 正社員:2022/04-)フルスタックエンジニア

      資本金：8 億 7 千 9 百円 従業員数：140 名 設立：2013 年 4 月

      事業内容：フィンテック・プラットフォーム事業など

      自社メディアとその技術基盤を他社にワンストップで提供する事業の保守運用開発を行なっています。

      ### 金融メディアの運用保守開発(2023/04-)

      #### プロジェクト概要

      国内最大級の金融メディアの保守・運用・開発を担当

      #### チーム構成

      チームリーダー：1名

      フルスタックエンジニア：3名

      フロントエンジニア：1名

      テスター：1名

      #### チームでの自分の役割

      フルスタックエンジニア、スクラムマスター

      #### 担当フェーズ

      - 要求定義
      - 要件定義
      - 基本設計
      - 詳細設計
      - 開発
      - テスト
      - 保守

      #### 業務内容

      フルスタックエンジニアとして、プロダクトの保守・開発を担当。

      #### 実績・取り組み

      - スクラム開発の導入と推進
      - 新人エンジニアの育成
      - 広告表示ロジックの強化
      - DB, Backendのパフォーマンスチューニング
      - Embedded SRE EngineerとしてSLI・SLOの設計・開発・運用
      - Four Keys導入によるDevOpsの推進
      - 勉強会・ワークショップの定期開催により、モダンインフラ・自動テスト・アジャイルなどチーム内のナレッジの強化

      #### 課題

      大規模開発によるプロダクト品質の低下

      #### 課題の経緯

      毎年の下期に大型開発を行っており、技術的負債が起因となり障害が多数発生した。

      #### 課題の原因

      度重なる新規開発によりコードレベルでのプロダクトの品質の低下や、ユーザーが増加したことにより既存アーキテクチャと相性が悪いこと

      #### 対処

      - 要件定義の強化
      - 自動テスト・テスト設計の強化
      - 既存機能のロジックの見直し
      - DB・バックエンドのパフォーマンスチューニング

      #### 成果

      - 自動テスト文化の浸透
      - ユーザーストーリーに基づく監視体制の強化
      - APIパフォーマンスを最大約4.75倍の改善

      |使用技術|使用サービス or フレームワーク|
      |---|-----|
      |OS|Linux|
      |Golang|echo|
      |JavaScript|React|
      |DB|PostgreSQL, Elasticsearch|
      |Cache|Redis|
      |Infrastructure|Docker, Kubernates, AWS|
      |CI tool|Code Build|
      |CD tool|Code Pipline|

      ### 自社製品のリプレイス開発(2022/02-2023/04)

      #### プロジェクト概要

      自社製品の[MPcloud](https://zuu.co.jp/service/mp-cloud/)のバックエンドとフロントエンドを分離するリプレイス開発にフルスタックエンジニアとして従事

      #### チーム構成

      チームリーダー：1名

      フルスタックエンジニア：3名

      #### チームでの自分の役割

      フルスタックエンジニア

      #### 担当フェーズ

      - 設計
      - 開発
      - テスト
      - 保守

      #### 業務内容

      自社プロダクトのバックエンドとフロントエンドの分離により、ログイン機能やセキュリティなどのリプレイス開発を担当。

      #### 実績・取り組み

      - Csrf Token Securityの新規開発
        - 技術選定、設計、実装、テストコードによる自動テストを担当
      - ログイン機能のリプレイス
        - Twitter, Facebook認証によるログイン機能のリプレイス
      - 脆弱性診断と対策
        - OWASP ZAPによる脆弱性診断
      - リリース作業とドキュメント化
        - Google CloudやKubernetesの知見がないエンジニアがリリースを行うため、ドキュメント化をした
      - マネージド証明書の実装
        - KubernetesのManegedCertificateの適用

      #### 課題

      自分を含めチームの半分が新卒一年目のエンジニアで構成されており、チーム全体としての技術力に課題があった。

      #### 課題の経緯

      チーム全体として見た時に、Google CloudやKubernetesなどのインフラの知見が少なく、チームリーダ不在時の障害発生時に円滑に対応できないなどの課題があった。

      #### 課題の原因

      チームメンバーの担当タスクによる技術のキャッチアップが依存していた。

      #### 対処

      - タスクから学んだことを共有するmtgを設ける
      - ペアプロをしやすい環境の整備
      - 障害訓練など定期的にGoogle Cloudを触る機会を設ける

      #### 成果

      - 社内外を含め学んだことを積極的に共有する文化の確立
      - ペアプロを通して、知識の拡充やレビューなどのリードタイムの削減
      - 突如発生する障害に対して、適切に対処するチームワークの向上

      |使用技術|使用サービス or フレームワーク|
      |---|-----|
      |OS|Linux|
      |Golang|echo|
      |JavaScript|NuxtJs|
      |DB|PostgreSQL, Elasticsearch|
      |Cache|Redis|
      |Infrastructure|Docker, Kubernates, GCP|
      |CI tool|GitHub Actionによるビルドテスト|
      |CD tool|Argo CD|

      ### データ基盤の構築・運用(2022/10-2023/10)

      #### プロジェクト概要

      運用サイドが意思決定に活用するためのデータレイクの構築と業務改善をデータエンジニアとして従事

      #### 担当フェーズ

      - 要求定義
      - 要件定義
      - 設計
      - 開発
      - テスト
      - 保守

      #### チーム人数

      チームリーダ：1名

      インフラエンジニア：1名

      インフラ兼データエンジニア：2名

      #### チームでの自分の役割

      インフラ兼データエンジニア

      #### 業務内容

      ユーザーインタビュー、要求定義、要件定義、技術選定、実装、リリースまでを担当

      #### 実績・取り組み

      - データの自動収集バッチの自動化
      - 運用サイドへユーザーインタビューを行い、データ活用促進を行なった。
      - dbt基盤の構築
        - 既存のバッチ処理のフローをdbtに以降
      - データカタログの開発
        - 社内のデータ活用促進のため、データカタログの要件定義・技術選定・開発

      #### 課題

      メディアを約20メディアほど運用しており、月次でデータの集計を手動で行なっており、工数と正確性に課題があった。

      #### 課題の経緯

      組織としてまだまだ歴史的に浅く、業務改善を行う基盤が整っていなかった。

      #### 課題の原因

      メディア数が多いことや、広告のプラットフォームが多数あり共通化して自動するのにエンジニアと運用サイドが深く連携を取る必要があった。

      #### 対処

      - 広告のプラットフォームごとのデータ収集バッチの実装
      - それぞれの運用サイドのチームにインタビューを行い、データ活用のインタフェースを共通化

      #### 成果

      - データ活用の推進
      - 月次のデータ収集自動化により、月30hの工数削減

      |使用技術|使用サービス or フレームワーク|
      |---|-----|
      |OS|Linux|
      |Python3|Pandas, dbt|
      |Google Cloud Platform|Big Query, Cloud Function, GCS, Alert Policy, Workflows, Cloud Run Jobs, Artifact Registry|
      |terraform|上記のGCPサービスの実装|
      |CI tool|GitHub Actionsによるterrformの自動化テスト|

      ### 自社サービスのマニュアルサイトの開発(2023/02-2023/04)

      #### プロジェクト概要

      自社プロダクトのマニュアルサイトの構築をメインで担当。

      #### 担当フェーズ

      - ユーザーインタビュー
      - 要求定義
      - 要件定義
      - 設計
      - 開発
      - テスト
      - 保守

      #### 業務内容

      機能利用方法に関するお問い合わせの工数削減のため、自社プロダクトの公式のマニュアルを構築

      #### 実績・取り組み

      - 運用サイド30名ほどユーザーインタビューを行い、要求・要件定義
      - 技術選定・実装
      - コンテンツの作成

      #### 課題

      自社プロダクトにはユーザー向けのマニュアルが用意あれていないため、利用方法のお問い合わせの工数が削減し、生産性を向上したい課題があった。

      #### 課題の経緯

      運用者が自社プロダクト利用方法を知るためには、エンジニアとディレクターにお問い合わせを行う必要があり、完結するまでのリードタイムや課題があった。

      #### 課題の原因

      自社プロダクト利用方法のナレッジがエンジニア・ディレクターに属人化しており、運用者・エンジニア・ディレクターそれぞれに発生するコミュニケーションボリュームが課題となっていた。

      #### 対処

      - 運用者に運用上での困っていることやどのような機能が欲しいかユーザーインタビューを実施。
      - マニュアルサイトを0から開発
        - 要件定義、実装、リリースまでを担当
      - コンテンツの作成
        - ユーザーインタビューにより発覚したニーズが高いコンテンツから作成

      #### 成果

      - エンジニアによるドキュメント整備の促進
      - 一月あたり15時間のコミュニケーションコストの削減

      |使用技術|使用サービス or フレームワーク|
      |---|-----|
      |OS|Linux|
      |CMS|[hugo](https://gohugo.io/hosting-and-deployment/hosting-on-github/)|
      |Amazon Web Service|Route53|
      |Google Cloud Platform|GKE, Load Balancer, Cloud Armor, Cloud Build|
      |terraform|上記のGCPサービスの実装|
      |CI tool|GCP Cloud Buildによる、Docker Imageの自動ビルド|
      |CD tool|Argo CD|

      ## アイタックソリューションズ株式会社（バイト:2021/09-2022/01）

      職務: サーバーサイドエンジニア

      ### 混雑状況判定システムの管理画面の実装

      |使用技術|使用サービス or フレームワーク|
      |---|-----|
      |Python3|Django RestFrameWork|
      |JavaScript|Vue.js|

      ## 課外活動

      ### OSSの貢献

      Redisのインターフェースを提供しているkey-value式のStorage DBのOSSに参画

      [PR](https://github.com/Kirov7/CouloyDB/pull/31)

      ### CloudNative Days委員会に参加

      クラウドインフラに関するカンファレンスの[CloudNative Days Tokyo](https://event.cloudnativedays.jp/cndt2023)の運営として参画しました。

      [ハンズオン](https://cloudnativedays.jp/posts/cndt2023-co-handson-call)の監視ツールの章のコンテンツ作成を担当しました。

      ## 社外プロジェクト
      <!-- * [運営に携わっているコミュニティ](そのコミュニティのconnpassやカンファレンスページのリンクとか)
      * [副業で携わっているサービス](そのサービスのランディングページのリンクとか) -->

      ### 芸能人向けライブ配信サイトのプラットフォームの新規開発(2022/11-2023/02)

      ライブ配信サイトのプラットフォームの新規開発をバックエンドエンジニアとして参画しました。

      **実装した機能**

      主に会員機能を担当しました。

      - [JWTトークン](https://jwt.io/introduction)によるログイン、ログアウト機能
      - プロフィール登録、編集機能
      - フォロー機能

      |使用技術|使用サービス or フレームワーク|
      |---|-----|
      |Golang|gin|
      |TypeScript|Nextjs|
      |DB|My SQL|
      |Amazon Web Service|Route53, Amazon ECS|

      ### 古本向けフリマサイトのプラットフォームの新規開発(2023/11-)

      古本向けフリマサイトの新規開発をフロントエンジニアとして参画しております。

      |使用技術|使用サービス or フレームワーク|
      |---|-----|
      |TypeScript|Nextjs|
      |DB|MongoDB|

      <!-- ### 過去の登壇資料
      * [Speaker Deck](Speaker Deckの自分の資料のページとか)
      -->
      <!-- ### 受賞歴
      * [イベント名と受賞した賞](イベントのランディングページのリンクや、結果がわかる記事など) -->

      ### 執筆歴

      * [Qiita](https://qiita.com/yoshihiro-shu)
      * [テックブログ](https://yoshihiro-shu.com/ja)


